rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // TOTO Historical Results
    match /totoResults/{drawId} {
      allow read: if true;
      // Allow write if the document being written contains a userId matching the admin's UID
      allow write: if request.resource.data.userId != null && request.resource.data.userId == "mAvLawNGpGdKwPoHuMQyXlKpPNv1";
    }

    // Tool Predictions (One document per tool, containing a map of predictions by draw number)
    // Allow anyone to read these predictions.
    // Admin (specific UID) can create or update the entire tool's prediction document.
    // The document itself must contain the admin's UID as 'userId'.
    match /toolPredictions/{toolId} {
      allow read: if true;
      allow create, update: if request.resource.data.userId != null && request.resource.data.userId == "mAvLawNGpGdKwPoHuMQyXlKpPNv1";
      allow delete: if request.auth != null && request.auth.token.isAdmin == true; // Or specific UID for delete too
    }

    // User Favorite Tools
    match /userToolFavorites/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Smart Pick AI Results
    match /smartPickResults/{resultId} {
      allow create: if request.resource.data.userId != null; // Allows create if triggered by an authenticated user who provides their UID
      allow read: if resource.data.userId != null; // Rely on server action to filter by userId
      allow update, delete: if false;
    }

    // App Settings (e.g., current draw info)
    match /appSettings/{docId} {
      allow read: if true;
      // Allow write if the document being written contains a userId matching the admin's UID
      allow write: if request.resource.data.userId != null && request.resource.data.userId == "mAvLawNGpGdKwPoHuMQyXlKpPNv1";
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
