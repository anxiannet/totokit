
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // TOTO Historical Results
    // Allow anyone to read historical results.
    // Allow write if the document being written contains a non-null 'userId' field.
    // This 'userId' field should be populated by the server action with the admin's UID.
    match /totoResults/{drawId} {
      allow read: if true;
      allow write: if request.resource.data.userId != null;
    }

    // Tool Predictions (Predictions made by specific tools for historical draws)
    // Allow create by any authenticated user (server action runs as system/authenticated context from client)
    // More specific rules might be needed if users can read/update these.
    match /toolPredictions/{predictionId} {
      allow read: if true; // Or more restrictive if needed
      allow create: if true; // Assuming server action is trusted source
      allow update, delete: if false; // Or allow admin: request.auth != null && request.auth.token.isAdmin == true;
    }

    // User Favorite Tools
    // Users can only read and write their own favorite tools document.
    match /userToolFavorites/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Smart Pick AI Results
    // Allow authenticated users to create their own smart pick results.
    // Users can read their own saved smart picks.
    match /smartPickResults/{resultId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Or set specific rules
    }

    // Default deny all other access to prevent unintended access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

    